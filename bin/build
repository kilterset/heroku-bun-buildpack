#!/usr/bin/env bash

set -eo pipefail

layers_dir="$1"
env_dir="$2/env"
plan_path="$3"
build_dir="${layers_dir}/bun"
bun_bin="${build_dir}/bin/bun"

function run() {
  echo
  echo "Kilterset/Bun Buildpack"
  echo

  install
  install_dependencies
  write_metadata

  exit 0
}

function install() {
  echo  "---> Installing Bun"

  export BUN_INSTALL="${build_dir}"

  installed_version="$(get_installed_version)"
  target_version="$(get_target_version)"

  if [[ -f "${bun_bin}" && -z "${target_version}" || "${installed_version}" == "${target_version}" ]]; then
    if [ "${installed_version}" == "${target_version}" ]; then
      echo "Using cached Bun install"
    else
      check_for_updated_version
    fi
  else
    install_bun "${target_version}"
  fi

  echo "Installed Bun v$($bun_bin --version)"
}

function install_dependencies() {
  echo "---> Installing dependencies"

  mkdir -p "${build_dir}/cache"
  $bun_bin install --production --frozen-lockfile --cache-dir="${build_dir}/cache"
}

function write_metadata() {
  echo "---> Writing metadata"

  cat <<TOML >"${layers_dir}/store.toml"
[metadata]
last_stack = "${CNB_STACK_ID}"
TOML

  cat << TOML > "${build_dir}.toml"
[types]
build = true
cache = true
launch = true
TOML

  echo "Done."
}

function check_for_updated_version() {
  latest_version="$(get_latest_version)"

  if [ "${installed_version}" != "${latest_version}" ]; then
    install_bun "${latest_version}"
  else
    echo "Using cached Bun install"
  fi
}

function install_bun() {
  target_version="$1"
  version_options=""

  if [ ! -z "${target_version}" ]; then
    version_options="-s bun-v${target_version}"
  fi

  curl -fsSL --retry-connrefused --retry 3 https://bun.sh/install | bash ${version_options}
}

function get_installed_version() {
  if [ -f "${bun_bin}" ]; then
    "${bun_bin}" --version
  fi
}

function get_target_version() {
  if [ ! -z "${BUN_VERSION}" ]; then
    echo "${BUN_VERSION}"
  else
    cat .bun-version 2>/dev/null || echo
  fi
}

function get_latest_version() {
  curl -fsSL --retry-connrefused --retry 3 https://api.github.com/repos/oven-sh/bun/releases | jq -r '.[0] | .tag_name // "v1.2.2" | split("v")[1]'
}

run
